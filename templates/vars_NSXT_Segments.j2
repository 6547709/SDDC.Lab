{#
 #      Authors: Luis Chanu & Rutger Blom
 #     Filename: templates/var_NSXT_Segments.j2
 #      Used By: This file is used by the playbook createNsxVLANSegments.yml and createNsxOverlaySegments.yml
 #      Purpose: This Jinja2 template file is used to create the data structure that is provided to the nsxt_policy_segments module.
 #
 #  Description: This script creates a data structure containing ALL Segments in the Pod Config file.  It's up 
 #               to the playbook using this template to filter only the type of Segments it wants to process.
 #}
var_Segments:
{% for Segment in Nested_NSXT.Networking.Segments %}
  - display_name: "{{ Segment.Name }}"
    description:  "{{ Segment.Description }}"
    admin_state:  "{{ Segment.AdminState }}"
    replication_mode: "{{ Segment.ReplicationMode }}"
    transport_zone_display_name: "{{ Segment.TransportZone }}"
    tags:
{###### Make sure Tags is defined #####}
{% if (Segment.Tags is defined) %}
{###### If Tags is defined, add them to the list #}
{% for SingleTag in Segment.Tags %}
      - tag: "{{ SingleTag.Tag | default(None) }}"
        scope: "{{ SingleTag.Scope | default(None) }}"
{% endfor %}{# Tag #}
{###### If not defined, add one set of "None" entries to ensure 'tags' header has a list member #####}
{% else %}
      - tag: ""
        scope: ""
{% endif %}{# Segment.Tags is defined #}
{###### Only incluce 'vlan_ids' for VLAN-backed segments #####}
{% if Nested_NSXT.System.Fabric.TransportZone[Segment.TransportZone].Type == "VLAN" %}
{###### Verify user included VLANS variable with at least one entry  #####}
{% if (Segment.VLANS is defined) and (Segment.VLANS|length) > 0 %}
    vlan_ids:
{% for VLAN in Segment.VLANS %}
      - "{{ VLAN }}"
{% endfor %}{# VLAN #}
{% endif %}{# Type==VLAN #}
{% endif %}{# Segment.VLANS is defined #}
{% endfor %}{# Segment #}