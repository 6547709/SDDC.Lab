## Rutger has ownership of this file for the v2 migration
## converted to STATIC config files
---
- hosts: localhost
  name: configureNestedEsxi.yml
  gather_facts: false
  tasks:
    - name: Display error message if Pod-XXX-Config file is not valid or provided
      pause:
        seconds: 5
        prompt: |
          *****************************************************************************************************
          ****************************************** ERROR MESSAGE ********************************************
          *****************************************************************************************************

            A valid "Pod-XXX-Config.yml" file is required in order for this playbook to run.

            Please verify:
            ==============
              1) You supplied a valid Pod-XXX-Config.yml file via the ansible-playbook -e "@Pod-XXX-Config.yml"
                 command-line option.  Here is an example of a how to load a Pod-XXX-Config.yml file that is
                 located in your home directory:
                                    sudo ansible-playbook -e "@~/Pod-XXX-Config.yml" deploy.yml

              2) The Pod-XXX-Config.yml file provided was created using the playbooks/createPodConfig.yml script.
                 All Pod configuration files used to deploy labs MUST be generated using that script.

              3) You included the proper path with the "-e" option to the Pod-XXX-Config.yml file.

              4) You prefaced the file name in the "-e" option with a '@', as shown in the example above.

          *****************************************************************************************************
      when:
        - Valid_Pod_Config_File is not defined


    - name: DEBUG -- Display Target Variables (Pause)
      pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ============================ Display Variables For Pod {{Pod.Number}} ===========================

                                     Ansible Playbook: {{ ansible_play_name }}

                                  Nested_vCenter.FQDN: {{ Nested_vCenter.FQDN | lower }}
                                  Nested_vCenter.User: {{ Nested_vCenter.User }}
                              Nested_vCenter.Password: {{ Nested_vCenter.Password }}
                            Nested_vCenter.DataCenter: {{ Nested_vCenter.DataCenter }}

                               Common.NFS.Server.IPv4: {{ Common.NFS.Server.IPv4 }}
                                      Common.NFS.Path: {{ Common.NFS.Path  }} 
                                 Common.NFS.Datastore: {{ Common.NFS.Datastore }}
                                 Common.NFS.Datastore: {{ Common.NFS.Type }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true

    - name: Add nested ESXi host to vCenter
      vmware_host:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        datacenter_name: "{{ Nested_vCenter.DataCenter }}"
        validate_certs: false
        cluster_name: "{{ item.value.Cluster }}"
        esxi_hostname: "{{ item.value.FQDN }}"
        esxi_username: "{{ item.value.User }}"
        esxi_password: "{{ item.value.Password }}"
        state: present
      ignore_errors: true
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true

    - name: Mount NFS datastore on nested ESXi host
      vmware_host_datastore:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN }}"      
        datastore_name: "{{ Common.NFS.Datastore }}"
        datastore_type: "{{ Common.NFS.Type }}"
        nfs_server: "{{ Common.NFS.Server.IPv4 }}"
        nfs_path: "{{ Common.NFS.Path }}"
        nfs_ro: no
        state: present
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true
        - Deploy.UseNFS == true
