## Rutger has ownership of this file for the v2 migration ##
##
## ToDo:     - Replace {{ vcenter.datacenter }} variable as soon as deployVc.yml has been migrated 
##
##
---
- hosts: localhost
  name: createVDS.yml
  gather_facts: false
  vars_files:
    - ../config.yml
    - ../answerfile.yml
  tasks:
    - name: DEBUG -- Display Target Variables (Pause)
      pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ============================ Display Variables For Pod {{Pod.Number}} ===========================

                                      Ansible Playbook: {{ ansible_play_name }}

                                     Target.Deployment: {{ Target.Deployment }}

                                   Nested_vCenter.FQDN: {{ Nested_vCenter.FQDN }}
                                   Nested_vCenter.User: {{ Nested_vCenter.User }}
                               Nested_vCenter.Password: {{ Nested_vCenter.Password }}
                                    vcenter.datacenter: {{ vcenter.datacenter }}

                                            Nested_vCenter.Networking.vSwitch.Name: {{ Nested_vCenter.Networking.vSwitch.Name }}
                                      Nested_vCenter.Networking.vSwitch.Config.MTU: {{ Nested_vCenter.Networking.vSwitch.Config.MTU }}
                          Nested_vCenter.Networking.vSwitch.Config.NumberOfUplinks: {{ Nested_vCenter.Networking.vSwitch.Config.NumberOfUplinks }}
               Nested_vCenter.Networking.vSwitch.Config.LinkDiscoveryProtocol.Type: {{ Nested_vCenter.Networking.vSwitch.Config.LinkDiscoveryProtocol.Type }}
          Nested_vCenter.Networking.vSwitch.Config.LinkDiscoveryProtocol.Operation: {{ Nested_vCenter.Networking.vSwitch.Config.LinkDiscoveryProtocol.Operation }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true

    - name: Create distributed switch in the nested vCenter
      vmware_dvswitch:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        datacenter_name: "{{ vcenter.datacenter }}"
        validate_certs: false
        switch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        mtu: "{{ Nested_vCenter.Networking.vSwitch.Config.MTU }}"
        uplink_quantity: "{{ Nested_vCenter.Networking.vSwitch.Config.NumberOfUplinks }}"
        discovery_proto: "{{ Nested_vCenter.Networking.vSwitch.Config.LinkDiscoveryProtocol.Type }}"
        discovery_operation: "{{ Nested_vCenter.Networking.vSwitch.Config.LinkDiscoveryProtocol.Operation }}"
        state: present

    - name: Create Management port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.Management.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.Management.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create vMotion port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.vMotion.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.vMotion.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create vSAN port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.vSAN.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.vSAN.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create IP Storage port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.IPStorage.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.IPStorage.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create SVM-Management port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.ServiceVMs.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.ServiceVMs.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create Uplink1 port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.NSXEdgeUplink1.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        vlan_trunk: true
        vlan_id: "0-4094"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create Uplink2 port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.NSXEdgeUplink2.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        vlan_trunk: true
        vlan_id: "0-4094"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create vmnetwork port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.VMNetwork.Name }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        vlan_id: "{{ Nested_vCenter.Networking.vSwitch.PortGroup.VMNetwork.VLAN.ID }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Migrate uplinks to the VDS
      vmware_dvs_host:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN }}"
        switch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        vmnics:
          - vmnic1
          - vmnic2
        state: present
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Migrate vmk0 to the VDS
      vmware_migrate_vmk:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN }}"
        device: 'vmk0'
        current_switch_name: 'vSwitch0'
        current_portgroup_name: 'Management Network'
        migrate_switch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        migrate_portgroup_name: "{{ item.value.vmk.vmk0.PortGroup }}"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool 

    - name: Create vmk1 for vMotion
      vmware_vmkernel:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN }}"
        portgroup_name: "{{ item.value.vmk.vmk1.PortGroup }}"
        dvswitch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        enable_vmotion: true
        network:
          type: 'static'
          ip_address: "{{ item.value.vmk.vmk1.Address.IPv4.Address }}"
          subnet_mask: "{{ (item.value.vmk.vmk1.Address.IPv4.Address + '/' + item.value.vmk.vmk1.Address.IPv4.Prefix) | ipaddr('netmask') }}"
          tcpip_stack: vmotion
        state: present
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool 

    - name: Create vmk2 for vSAN
      vmware_vmkernel:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN }}"
        portgroup_name: "{{ item.value.vmk.vmk2.PortGroup }}"
        dvswitch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        enable_vsan: true
        network:
          type: 'static'
          ip_address: "{{ item.value.vmk.vmk2.Address.IPv4.Address }}"
          subnet_mask: "{{ (item.value.vmk.vmk2.Address.IPv4.Address + '/' + item.value.vmk.vmk2.Address.IPv4.Prefix) | ipaddr('netmask') }}"
        state: present
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool 
      
    - name: Create vmk3 for IP Storage
      vmware_vmkernel:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN }}"
        portgroup_name: "{{ item.value.vmk.vmk3.PortGroup }}"
        dvswitch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        enable_vsan: true
        network:
          type: 'static'
          ip_address: "{{ item.value.vmk.vmk3.Address.IPv4.Address }}"
          subnet_mask: "{{ (item.value.vmk.vmk3.Address.IPv4.Address + '/' + item.value.vmk.vmk3.Address.IPv4.Prefix) | ipaddr('netmask') }}"
        state: present
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool 
      
    - name: Remove the standard switch from the ESXi hosts
      vmware_vswitch:
        hostname: '{{ item.value.FQDN }}'
        username: '{{ item.value.User }}'
        password: '{{ item.value.Password }}'
        validate_certs: false
        switch: 'vSwitch0'
        state: absent
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool 
