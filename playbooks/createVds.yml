## Rutger has ownership of this file for the v2 migration ##
##
## ToDo:     - Replace {{ vcenter.datacenter }} variable as soon as deployVc.yml has been migrated 
##
##
---
- hosts: localhost
  name: createVDS.yml
  gather_facts: false
  vars_files:
    - ../config.yml
    - ../answerfile.yml
  tasks:
    - name: DEBUG -- Display Target Variables (Pause)
      pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ============================ Display Variables For Pod {{Pod.Number}} ===========================

                                     Ansible Playbook: {{ ansible_play_name }}

                                    Target.Deployment: {{ Target.Deployment }}

                                  Nested_vCenter.FQDN: {{ Nested_vCenter.FQDN }}
                                  Nested_vCenter.User: {{ Nested_vCenter.User }}
                              Nested_vCenter.Password: {{ Nested_vCenter.Password }}
                                   vcenter.datacenter: {{ vcenter.datacenter }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true

    - name: Create distributed switch in the nested vCenter
      vmware_dvswitch:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        datacenter_name: "{{ vcenter.datacenter }}"
        validate_certs: false
        switch_name: "{{ Nested_vCenter.Networking.vSwitch.Name }}"
        mtu: "{{ Nested_vCenter.Networking.vSwitch.Config.MTU }}"
        uplink_quantity: "{{ Nested_vCenter.Networking.vSwitch.Config.NumberOfUplinks }}"
        discovery_proto: "{{ Nested_vCenter.Networking.vSwitch.Config.LinkDiscoveryProtocol.Type }}"
        discovery_operation: "{{ Nested_vCenter.Networking.vSwitch.Config.LinkDiscoveryProtocol.Operation }}"
        state: present

    - name: Create Management port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ vds.management_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_id: "{{ physicalESX.vlan }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create vMotion port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ vds.vmotion_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_id: "{{ pod + vmotion }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create vSAN port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ vds.vsan_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_id: "{{ pod + vsan }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create IP Storage port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ vds.ipstorage_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_id: "{{ pod + ipstorage }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create SVM-Management port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ vds.svmmanagement_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_id: "{{ pod + ipstorage }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create vmnetwork port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ vds.vmnetwork_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_id: "{{ pod + vmnetwork }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create Uplink1 port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ vds.uplink1_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_trunk: true
        vlan_id: "0-4094"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create Uplink2 port group
      vmware_dvs_portgroup:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        portgroup_name: "{{ vds.uplink2_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_trunk: true
        vlan_id: "0-4094"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Migrate uplinks to the VDS
      vmware_dvs_host:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.fqdn }}"
        switch_name: "{{ vds.name }}"
        vmnics:
          - vmnic1
          - vmnic2
        state: present
      with_dict: "{{ vESX }}"

    - name: Migrate vmk0 to the VDS
      vmware_migrate_vmk:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.fqdn }}"
        device: 'vmk0'
        current_switch_name: 'vSwitch0'
        current_portgroup_name: 'Management Network'
        migrate_switch_name: "{{ vds.name }}"

        migrate_portgroup_name: "{{ vds.management_pg }}"
      with_dict: "{{ vESX }}"

    - name: Create vmk1 for vMotion
      vmware_vmkernel:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.fqdn }}"
        portgroup_name: "{{ vds.vmotion_pg }}"
        dvswitch_name: "{{ vds.name }}"
        enable_vmotion: true
        network:
          type: 'static'
          ip_address: "{{ item.value.vmotion_ip }}"
          subnet_mask: "{{ item.value.vmotion_mask }}"
          tcpip_stack: vmotion
        state: present
      with_dict: "{{ vESX }}"

    - name: Create vmk2 for vSAN
      vmware_vmkernel:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.fqdn }}"
        portgroup_name: "{{ vds.vsan_pg }}"
        dvswitch_name: "{{ vds.name }}"
        enable_vsan: true
        network:
          type: 'static'
          ip_address: "{{ item.value.vsan_ip }}"
          subnet_mask: "{{ item.value.vsan_mask }}"
        state: present
      with_dict: "{{ vESX }}"
      
    - name: Create vmk3 for IP Storage
      vmware_vmkernel:
        hostname: "{{ Nested_vCenter.FQDN }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.fqdn }}"
        portgroup_name: "{{ vds.ipstorage_pg }}"
        dvswitch_name: "{{ vds.name }}"
        network:
          type: 'static'
          ip_address: "{{ item.value.ipstorage_ip }}"
          subnet_mask: "{{ item.value.ipstorage_mask }}"
        state: present
      with_dict: "{{ vESX }}"
      
    - name: Remove the standard switch from the ESXi hosts
      vmware_vswitch:
        hostname: '{{ item.value.FQDN }}'
        username: '{{ item.value.User }}'
        password: '{{ item.value.Password }}'
        validate_certs: false
        switch: 'vSwitch0'
        state: absent
      with_dict: "{{ vESX }}"
