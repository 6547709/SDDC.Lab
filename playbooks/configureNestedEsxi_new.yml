## Rutger has ownership of this file for the v2 migration ##
##
##
---
- hosts: localhost
  name: configureNestedEsxi.yml
  gather_facts: false
  vars_files:
    - ../config.yml
    - ../software.yml
  tasks:
    - name: DEBUG -- Display Target Variables (Pause)
      pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ============================ Display Variables For Pod {{Pod.Number}} ===========================

                                     Ansible Playbook: {{ ansible_play_name }}

                                    Target.Deployment: {{ Target.Deployment }}

                                          Target.FQDN: {{ Target.FQDN }}
                                          Target.User: {{ Target.User }}
                                      Target.Password: {{ Target.Password }}
                                       Target.Cluster: {{ Target.Cluster }}
                                    Target.DataCenter: {{ Target.DataCenter }}
                                      Target.VMFolder: {{ Target.VMFolder }}
                                     Target.Datastore: {{ Target.Datastore }}

                               Common.NFS.Server.IPv4: {{ Common.NFS.Server.IPv4 }}
                                      Common.NFS.Path: {{ Common.NFS.Path  }} 
                                 Common.NFS.Datastore: {{ Common.NFS.Datastore }}
                                 Common.NFS.Datastore: {{ Common.NFS.Type }}

                                  Nested_vCenter.FQDN: {{ Nested_vCenter.FQDN | lower }}
                                  Nested_vCenter.User: {{ Nested_vCenter.User }}
                              Nested_vCenter.Password: {{ Nested_vCenter.Password }}
                            Nested_vCenter.DataCenter: {{ Nested_vCenter.DataCenter }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true

    - name: Remove local datastore within nested ESXi deployed on vCenter
      vmware_host_datastore:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        datastore_name: datastore1
        esxi_hostname: "{{ item.value.FQDN | lower }}"
        state: absent
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: 
        - Target.Deployment == "vCenter"
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true

    - name: Remove local datastore within nested ESXi deployed on the ESXi host
      vmware_host_datastore:
        hostname: "{{ item.value.FQDN | lower }}" 
        username: "{{ item.value.User }}"
        password: "{{ item.value.Password }}"
        validate_certs: false
        datastore_name: datastore1
        state: absent
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: 
        - Target.Deployment == "Host"
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true

    - name: Add nested ESXi to vCenter
      vmware_host:
        hostname: "{{ Nested_vCenter.FQDN | lower }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        datacenter_name: "{{ Nested_vCenter.DataCenter }}"
        validate_certs: false
        cluster_name: "{{ item.value.Cluster }}"
        esxi_hostname: "{{ item.value.FQDN | lower }}"
        esxi_username: "{{ item.value.User }}"
        esxi_password: "{{ item.value.Password }}"
        state: present
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true

    - name: Mount NFS datastore on nested ESXi
      vmware_host_datastore:
        hostname: "{{ Nested_vCenter.FQDN | lower }}"
        username: "{{ Nested_vCenter.User | lower }}"
        password: "{{ Nested_vCenter.Password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN | lower }}"      
        datastore_name: "{{ Common.NFS.Datastore }}"
        datastore_type: "{{ Common.NFS.Type }}"
        nfs_server: "{{ Common.NFS.Server.IPv4 }}"
        nfs_path: "{{ Common.NFS.Path }}"
        nfs_ro: no
        state: present
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: 
        - Nested_Clusters[item.value.Cluster]['DeployHosts'] == true
        - Deploy.UseNFS == true
