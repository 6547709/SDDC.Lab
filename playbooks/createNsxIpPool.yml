## Rutger has ownership of this module
---
- hosts: localhost
  name: createNsxIpPool.yml
  gather_facts: false
  vars_files:
    - ../config.yml
    - ../software.yml
  vars:
    file_name: "{{ Target.VarsFolder }}/vars_NSXT_IPPools"
  tasks:
    - name: DEBUG -- Display Target Variables (Pause)
      pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ================================ Display Variables For Pod {{ '%03d'|format(Pod.Number|int) }} ==================================


                                     Ansible Playbook: {{ ansible_play_name }}

                                    Target.Deployment: {{ Target.Deployment }}

                                          Target.FQDN: {{ Target.FQDN }}
                                          Target.User: {{ Target.User }}
                                      Target.Password: {{ Target.Password }}
                                       Target.Cluster: {{ Target.Cluster }}
                                    Target.DataCenter: {{ Target.DataCenter }}
                                     Target.Datastore: {{ Target.Datastore }}
                                      Target.VMFolder: {{ Target.VMFolder }}

             Nested_NSXT.Components.LocalManager.FQDN: {{ Nested_NSXT.Components.LocalManager.FQDN }}

                       Nested_NSXT.Networking.IPPools: {{ Nested_NSXT.Networking.IPPools }}
                   Pool_Static_Subnets Templated File: {{ file_name }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true
        - Deploy.NSXT.LocalManager == true


    - name: Create 'vars' directory
      file:
        path: "{{ Target.VarsFolder }}"
        state: directory
      when:
        - Deploy.NSXT.LocalManager == true


    - name: Create file with IP Pools data structure
      template:
        src:  "../templates/vars_NSXT_IPPools.j2"
        dest: "{{ file_name }}"
        force: true
      when:
        - Deploy.NSXT.LocalManager == true


    - name: Read IP Pools data structure from file
      set_fact:
        var_IPPools: "{{ lookup('file', file_name) | from_yaml }}"
      when:
        - Deploy.NSXT.LocalManager == true


    - name: DEBUG -- Display Target Variables (Pause)
      pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ================================ Display var_IPPools Variable ===================================

              var_IPPools: {{ var_IPPools }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true
        - Deploy.NSXT.LocalManager == true


    - name: Create NSX-T IP Pools using Polcy API
      nsxt_policy_ip_pool:
        hostname: "{{ Nested_NSXT.Components.LocalManager.FQDN }}"
        username: "{{ Nested_NSXT.Credentials.admin.Name }}"
        password: "{{ Nested_NSXT.Credentials.admin.Password }}"
        validate_certs: false
        state: present
        display_name: "{{ item.display_name }}"
        description:  "{{ item.description }}"
        pool_static_subnets: "{{ item.pool_static_subnets }}"
        tags:
          tag:   "{{ item.tags.tag }}"
          scope: "{{ item.tags.scope }}"
      with_items:
        - "{{ var_IPPools.ip_pools }}"
      when:
        - Deploy.NSXT.LocalManager == true


    - name: Delete IP Pools data structure file
      file: 
        path: "{{ file_name }}"
        state: absent
      when: 
        - Deploy.NSXT.LocalManager == true
        - DEBUG.KeepInstallerFiles != true

###
### Previous Configuration -- Keep until working
###
#    - name: Load variables for NSX-T
#      include_vars:
#        file: nsxt_vars.yml
#      when: deploy_nsxt == true
#
#    - name: Create NSX-T IP pool
#      nsxt_ip_pools:
#        hostname: "{{ nsxman.nsxman01.ip }}"
#        username: "{{ nsxmanadminuser }}"
#        password: "{{ nsxmanpassword }}"
#        validate_certs: False
#        display_name: "{{ item.display_name }}"
#        subnets: "{{ item.subnets }}"
#        state: present
#      with_items:
#        - "{{ ip_pools }}"
#      when:
#        - deploy_nsxt == true
#
