## Luis has ownership of this module
## NOT DONE YET -- Need to migrate var_nst to j2 template, and look at data structure.
## Not sure there's a difference between 2.5 and 3.0 on this call
---
- hosts: localhost
  name: createNsxUplinkProfiles.yml
  gather_facts: false
#  vars_files:
#    - ../answerfile.yml
  vars:
    LOCAL_UplinkProfiles_File: "{{ Target.VarsFolder }}/vars_NSXT_UplinkProfiles"
  tasks:
    - name: Display error message if Pod-XXX-Config file is not valid or provided
      pause:
        seconds: 5
        prompt: |
          *****************************************************************************************************
          ****************************************** ERROR MESSAGE ********************************************
          *****************************************************************************************************

            A valid "Pod-XXX-Config.yml" file is required in order for this playbook to run.

            Please verify:
            ==============
              1) You supplied a valid Pod-XXX-Config.yml file via the ansible-playbook -e "@Pod-XXX-Config.yml"
                 command-line option.  Here is an example of a how to load a Pod-XXX-Config.yml file that is
                 located in your home directory:
                                    ansible-playbook -e "@~/Pod-XXX-Config.yml" deploy.yml

              2) The Pod-XXX-Config.yml file provided was created using the playbooks/createPodConfig.yml script.
                 All Pod configuration files used to deploy labs MUST be generated using that script.

              3) You included the proper path with the "-e" option to the Pod-XXX-Config.yml file.

              4) You prefaced the file name in the "-e" option with a '@', as shown in the example above.

          *****************************************************************************************************
      when:
        - Valid_Pod_Config_File is not defined

    - name: Exit Ansible playbook if Pod-XXX-Config.yml file is not valid or provided
      meta: end_play
      when: Valid_Pod_Config_File is not defined


    - name: DEBUG -- Display Target Variables (Pause)
      pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ================================ Display Variables For Pod {{ '%03d'|format(Pod.Number|int) }} ==================================


                                          Ansible Playbook: {{ ansible_play_name }}

                                         Target.Deployment: {{ Target.Deployment }}

                  Nested_NSXT.Components.LocalManager.FQDN: {{ Nested_NSXT.Components.LocalManager.FQDN }}

          Nested_NSXT.System.Fabric.Profile.UplinkProfiles: {{ Nested_NSXT.System.Fabric.Profile.UplinkProfiles }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true
        - Deploy.NSXT.LocalManager == true


    - name: Create 'vars' directory
      file:
        path: "{{ Target.VarsFolder }}"
        state: directory
      when:
        - Deploy.NSXT.LocalManager == true


    - name: Create file with Uplink Profile data structure
      template:
        src:  "{{ Target.TemplateFolder }}/vars_NSXT_UplinkProfiles.j2"
        dest: "{{ LOCAL_UplinkProfiles_File }}"
        force: true
      when:
        - Deploy.NSXT.LocalManager == true


## Read in var_UplinkProfiles variable
    - name: Read var_UplinkProfiles data structure from file
      include_vars:
        file: "{{ LOCAL_UplinkProfiles_File }}"
      when:
        - Deploy.NSXT.LocalManager == true


    - name: DEBUG -- Display Target Variables (Pause)
      pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ================================ Display var_UplinkProfiles Variable ===================================

              var_UplinkProfiles: {{ var_UplinkProfiles | to_nice_yaml(indent=2) }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true
        - Deploy.NSXT.LocalManager == true
        - var_UplinkProfiles != ""

    - name: Display Default Teamings
      debug:
        msg: var_UplinkProfiles[2].teaming


    - name: Display Named Teamings
      debug:
        msg: var_UplinkProfiles[2].named_teamings


    - name: Create Uplink Profiles
      nsxt_uplink_profiles:
        hostname: "{{ Nested_NSXT.Components.LocalManager.FQDN }}"
        username: "{{ Nested_NSXT.Credentials.admin.Name }}"
        password: "{{ Nested_NSXT.Credentials.admin.Password }}"
        validate_certs: False
        resource_type: UplinkHostSwitchProfile
        display_name: "{{ item.display_name }}"
        description: "{{ item.description }}"                              # Description
        transport_vlan: "{{ item.transport_vlan }}"                        # Overlay Transport VLAN
#        send_enabled: true                            # Send LLDP
#        enabled: true                                       # Enable NIOC
#        send_enabled: "{{ item.send_enabled }}"                            # Send LLDP
#        enabled: "{{ item.enabled }}"                                      # Enable NIOC
        mtu: "{{ item.mtu }}"                                              # Overlay MTU
        teaming: "{{ item.teaming }}"                                      # Default NIC Teaming
        named_teamings: "{{ item.named_teamings }}"                        # Named Teaming Policies
        state: "present"
      loop: "{{ var_UplinkProfiles }}"
      when:
        - Deploy.NSXT.LocalManager == true
        - var_UplinkProfiles != ""

    - name: Delete Uplink Profiles data structure file
      file: 
        path: "{{ LOCAL_UplinkProfiles_File }}"
        state: absent
      when: 
        - Deploy.NSXT.LocalManager == true
        - DEBUG.KeepConfigFiles != true



#    - name: Load variables for NSX-T
#      include_vars:
#        file: nsxt_vars.yml
#      when: Deploy.NSXT.LocalManager == true
#
#    - name: Create NSX-T 2.5 uplink profiles
#      nsxt_uplink_profiles:
#        hostname: "{{ Nested_NSXT.Components.LocalManager.FQDN }}"
#        username: "{{ Nested_NSXT.Credentials.admin.Name }}"
#        password: "{{ Nested_NSXT.Credentials.admin.Password }}"
#        validate_certs: False
#        resource_type: UplinkHostSwitchProfile
#        display_name: "{{ item.display_name }}"
#        teaming: "{{ item.teaming }}"
#        transport_vlan: "{{ Net.Transport.VLAN }}" 
#        state: "present"
#      with_items:
#        - "{{ uplink_profiles2 }}"
#      when:
#        - Deploy.NSXT.LocalManager == true
#        - nsxt_major_version == 2
#
#    - name: Create NSX-T 3.0 uplink profiles
#      nsxt_uplink_profiles:
#        hostname: "{{ Nested_NSXT.Components.LocalManager.FQDN }}"
#        username: "{{ Nested_NSXT.Credentials.admin.Name }}"
#        password: "{{ Nested_NSXT.Credentials.admin.Password }}"
#        validate_certs: False
#        resource_type: UplinkHostSwitchProfile
#        display_name: "{{ item.display_name }}"
#        teaming: "{{ item.teaming }}"
#        transport_vlan: "{{ Net.Transport.VLAN }}" 
#        state: "present"
#      with_items:
#        - "{{ uplink_profiles3 }}"
#      when:
#        - Deploy.NSXT.LocalManager == true
#        - nsxt_major_version == 3
