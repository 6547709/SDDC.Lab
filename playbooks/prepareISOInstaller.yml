###     Module Owner: Rutger
### Conversion to V2: Ongoing
##
##  ToDo:
##
---
- hosts: localhost
  gather_facts: false
  vars_files:
    - ../config.yml  
    - ../software.yml
  tasks:
    - name: Mount ESXi ISO
      action: mount name='/mnt/ESX' src="{{ Software[Deploy.Software.ESXi.Vendor][Deploy.Software.ESXi.Product]['Installers'][Deploy.Software.ESXi.Version].Location }}/{{Software[Deploy.Software.ESXi.Vendor][Deploy.Software.ESXi.Product]['Installers'][Deploy.Software.ESXi.Version].File }}" opts=loop fstype=iso9660 state=mounted

    - name: Copy ISO contents
      copy: 
        src: "/mnt/ESX"
        dest: "{{ Target.TempFolder }}"

    - name: Unmount ESXi ISO
      action: mount name='/mnt/ESX' src="{{ Software[Deploy.Software.ESXi.Vendor][Deploy.Software.ESXi.Product]['Installers'][Deploy.Software.ESXi.Version].Location }}/{{Software[Deploy.Software.ESXi.Vendor][Deploy.Software.ESXi.Product]['Installers'][Deploy.Software.ESXi.Version].File }}" fstype=iso9660 state=absent

    - name: Edit boot.cfg
      replace:
        dest: "{{ Target.TempFolder }}/{{ Deploy.Software.ESXi.Installer }}/boot.cfg"
        regexp: 'kernelopt=cdromBoot runweasel'
        replace: 'kernelopt=ks=file://etc/vmware/weasel/KS.CFG'

    - name: insert customks.tgz in boot.cfg modules section
      replace:
        dest: "{{ Target.TempFolder }}/ESX/boot.cfg"
        regexp: 'imgpayld.tgz$'
        replace: 'imgpayld.tgz --- /customks.tgz'

    - name: copy customks.tgz
      copy: 
        src: "../files/customks.tgz"
        dest: "{{ Target.TempFolder }}/{{ Deploy.Software.ESXi.Installer }}/"

    - name: Create custom ESXi ISO
      command: "xorrisofs -relaxed-filenames -J -R -o {{ Target.TempFolder }}/{{ Deploy.Software.ESXi.Installer }} -b isolinux.bin -c boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table {{ Target.TempFolder }}/{{ Deploy.Software.ESXi.Installer }}/"
      args:
        chdir: "{{ Target.TempFolder }}/{{ Deploy.Software.ESXi.Installer }}/"

    - name: Upload the ESXi ISO to the datastore
      vsphere_copy: 
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: no
        src: "{{ Target.TempFolder }}/{{ Deploy.Software.ESXi.Installer }}" 
        datastore: "{{ Target.Datastore }}" 
        path: "{{ Target.ISOFolder }}/{{ Deploy.Software.ESXi.Installer }}"
      tags: upload
      
    - name: Delete temporary directory
      file:
        path: "{{ Target.TempFolder }}/{{ Deploy.Software.ESXi.Installer }}/"
        state: absent

    - name: Delete custom ESXi ISO on local filesystem
      file:
        path: "{{ Target.TempFolder }}/{{ Deploy.Software.ESXi.Installer }}"
        state: absent