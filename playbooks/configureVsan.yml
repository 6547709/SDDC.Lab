## Rutger has ownership of this file for the v2 migration ##
---
- hosts: localhost
  name: configureVsan.yml
  gather_facts: false
  vars_files:
    - ../config.yml
    - ../software.yml
  tasks:
    - name: DEBUG -- Display Target Variables (Pause)
      pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ============================ Display Variables For Pod {{Pod.Number}} ===========================

                                     Ansible Playbook: {{ ansible_play_name }}

                                    Target.Deployment: {{ Target.Deployment }}

                                          Target.FQDN: {{ Target.FQDN }}
                                          Target.User: {{ Target.User }}
                                      Target.Password: {{ Target.Password }}
                                       Target.Cluster: {{ Target.Cluster }}
                                    Target.DataCenter: {{ Target.DataCenter }}
                                     Target.Datastore: {{ Target.Datastore }}
                                      Target.VMFolder: {{ Target.VMFolder }}
                                    Target.TempFolder: {{ Target.TempFolder }}

                                  Nested_vCenter.FQDN: {{ Nested_vCenter.FQDN | lower }}
                                Nested_vCenter.VMName: {{ Nested_vCenter.VMName }}
                              Nested_vCenter.Password: {{ Nested_vCenter.Password }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true

    - name: Create Ruby script for silencing vSAN warnings
      template: 
        src: "../templates/vsan_silence.rb.j2"
        dest: "{{ Target.TempFolder }}/{{ item.key }}"
      loop: "{{ Nested_Clusters | dict2items }}"
      when: 
        - item.value.vSAN == true
        - item.value.DeployHosts == true

    - name: Copy Ruby script to the nested vCenter deployed on vCenter
      vmware_guest_file_operation:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        cluster: "{{ Target.Cluster }}"
        datacenter: "{{ Target.DataCenter }}"
        folder: "{{ Target.VMFolder }}"
        validate_certs: false
        vm_id: "{{ Nested_vCenter.VMName }}"
        vm_username: "root"
        vm_password: "{{ Nested_vCenter.Password }}"
        copy:
            src: "{{ Target.TempFolder }}/{{ item.key }}"
            dest: "/tmp/{{ item.key }}"
            overwrite: true
      loop: "{{ Nested_Clusters | dict2items }}"
      when: 
        - Target.Deployment == "vCenter"
        - item.value.vSAN == true
        - item.value.DeployHosts == true

    - name: Copy Ruby script to the nested vCenter deployed on the ESXi host
      vmware_guest_file_operation:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ Nested_vCenter.VMName }}"
        vm_username: "root"
        vm_password: "{{ Nested_vCenter.Password }}"
        copy:
            src: "{{ Target.TempFolder }}/{{ item.key }}"
            dest: "/tmp/{{ item.key }}"
            overwrite: true
      loop: "{{ Nested_Clusters | dict2items }}"
      when: 
        - Target.Deployment == "Host"
        - item.value.vSAN == true
        - item.value.DeployHosts == true

    - name: Run Ruby script on the nested vCenter deployed on vCenter
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        cluster: "{{ Target.Cluster }}"
        datacenter: "{{ Target.DataCenter }}"
        folder: "{{ Target.VMFolder }}"
        validate_certs: false
        vm_id: "{{ Nested_vCenter.VMName }}"
        vm_username: "root"
        vm_password: "{{ Nested_vCenter.Password }}"
        vm_shell: /usr/bin/rvc
        vm_shell_args: '{{ Nested_vCenter.User }}:VMware1\!@{{ Nested_vCenter.FQDN | lower }} -s /temp/{{ item.key }}'
      loop: "{{ Nested_Clusters | dict2items }}"
      when: 
        - Target.Deployment == "vCenter"
        - item.value.vSAN == true
        - item.value.DeployHosts == true
        
    - name: Run Ruby script on the nested vCenter deployed on the ESXi host
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ Nested_vCenter.VMName }}"
        vm_username: "root"
        vm_password: "{{ Nested_vCenter.Password }}"
        vm_shell: /usr/bin/rvc
        vm_shell_args: '{{ Nested_vCenter.User }}:VMware1\!@{{ Nested_vCenter.FQDN | lower }} -s /tmp/{{ item.key }}'
      loop: "{{ Nested_Clusters | dict2items }}"
      when:
        - Target.Deployment == "Host"
        - item.value.vSAN == true
        - item.value.DeployHosts == true

    - name: Delete the Ruby script from the Ansible controller
      file: 
        path: "{{ Target.TempFolder }}/{{ item.key }}"
        state: absent
      loop: "{{ Nested_Clusters | dict2items }}"
      when: 
        - item.value.vSAN == true
        - item.value.DeployHosts == true
        - DEBUG.KeepConfigFiles != true

    - name: Enable vSAN
      enable_vsan:
        vcenter: "{{ Nested_vCenter.FQDN | lower }}"
        user: "{{ Nested_vCenter.User }}"
        passwd: "{{ Nested_vCenter.Password }}"
        cluster: "{{ item.key }}"
      ignore_errors: true
      loop: "{{ Nested_Clusters | dict2items }}"
      when:
        - item.value.vSAN == true
        - item.value.DeployHosts == true

    - name: Claim disks for vSAN
      claim_vsan_disks:
        vcenter: "{{ Nested_vCenter.FQDN | lower }}"
        user: "{{ Nested_vCenter.User }}"
        passwd: "{{ Nested_vCenter.Password }}"
        cluster: "{{ item.key }}"
      ignore_errors: true
      loop: "{{ Nested_Clusters | dict2items }}"
      when:
        - item.value.vSAN == true
        - item.value.DeployHosts == true
