## Rutger has ownership of this file for the v2 migration ##
##
## ToDo:     Not started
##
##
---
- hosts: localhost
  gather_facts: false
  vars_files:
    - ../config.yml
    - ../answerfile.yml
  tasks:

    - name: Create Ruby script for silencing vSAN warnings
      template: 
        src=../templates/vsan_silence.rb.j2
        dest={{ Target.TempFolder }}/{{ item.key }}
      loop: "{{ Nested_Clusters | dict2items }}"
      when: item.value.vSAN|bool

    - name: Copy Ruby script to the nested vCenter deployed on the ESXi host
      vmware_guest_file_operation:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ Nested_vCenter.VMName }}"
        vm_username: "root"
        vm_password: "{{ Nested_vCenter.Password }}"
        copy:
            src: "{{ Target.TempFolder }}/{{ item.key }}"
            dest: "{{ Target.TempFolder }}/{{ item.key }}"
            overwrite: true
      loop: "{{ Nested_Clusters | dict2items }}"
      when: Target.Deployment == "Host" and item.value.vSAN|bool
        
    - name: Run Ruby script on the nested vCenter deployed on the ESXi host
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ Nested_vCenter.VMName }}"
        vm_username: "root"
        vm_password: "{{ Nested_vCenter.Password }}"
        vm_shell: /usr/bin/rvc
        vm_shell_args: '{{ vcenter.user }}:VMware1\!@{{ vcenter.fqdn }} -s {{ Target.TempFolder }}/{{ item.key }}'
      loop: "{{ Nested_Clusters | dict2items }}"
      when: Target.Deployment == "Host" and item.value.vSAN|bool

    - name: Delete the Ruby script from the Ansible controller
      file: 
        path: "{{ Target.TempFolder }}/{{ item.key }}"
        state: absent
      loop: "{{ Nested_Clusters | dict2items }}"
      when: 
        - item.value.vSAN == true
        - DEBUG_keep_config_files != true

    - name: Enable vSAN
      enable_vsan:
        vcenter: "{{ Nested_vCenter.FQDN }}"
        user: "{{ Nested_vCenter.User }}"
        passwd: "{{ Nested_vCenter.Password }}"
        cluster: "{{ item.key }}"
      loop: "{{ Nested_Clusters | dict2items }}"
      when: item.value.vSAN|bool

    - name: Claim disks for vSAN
      claim_vsan_disks:
        vcenter: "{{ Nested_vCenter.FQDN }}"
        user: "{{ Nested_vCenter.User }}"
        passwd: "{{ Nested_vCenter.Password }}"
        cluster: "{{ item.key }}"
      ignore_errors: true
      loop: "{{ Nested_Clusters | dict2items }}"
      when: item.value.vSAN|bool
