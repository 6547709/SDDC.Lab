---
- hosts: 127.0.0.1
  connection: local
  vars_files:
    - ../answerfile.yml
  tasks:
    - name: Create template file for VyOS router
      template: 
        src=../templates/vyos.conf
        dest=/tmp/vyos.conf
      when: deploy_router == true

    - name: Download VyOS OVA
      get_url:
        url: https://downloads.vyos.io/release/legacy/1.1.8/vyos-1.1.8-amd64.ova
        dest: "{{ VyosOva }}"
      when: deploy_router == true

    - name: Deploy VyOS router
      vmware_deploy_ovf:
        hostname: "{{ physicalESX.host }}"
        username: "{{ physicalESX.user }}"
        password: "{{ physicalESX.password }}"
        validate_certs: no
        datastore: "{{ physicalESX.datastore }}"
        name: "{{ vm_prefix }}{{ router_hostname }}"
        ovf: "{{ VyosOva }}"
        networks:
          "public": "{{ router_public_pg }}"
          "internal": "{{ physicalESX.trunkpg }}"
        disk_provisioning: "thin"
        power_on: true
        wait: true
        wait_for_ip_address: yes
      delegate_to: localhost
      when: deploy_router == true

    - name: Configure VyOS router
      vmware_guest_file_operation:
        hostname: "{{ physicalESX.host }}"
        username: "{{ physicalESX.user }}"
        password: "{{ physicalESX.password }}"
        validate_certs: no
        vm_id: "{{ vm_prefix }}{{ router_hostname }}"
        vm_username: "vyos"
        vm_password: "vyos"
        copy:
            src: "/tmp/vyos.conf"
            dest: "/config/config.boot"
            overwrite: true
      when: deploy_router == true

    - name: Write annotation on the VyOS VM
      vmware_guest:
        hostname: "{{ physicalESX.host }}"
        username: "{{ physicalESX.user }}"
        password: "{{ physicalESX.password }}"
        validate_certs: no
        name: "{{ vm_prefix }}{{ router_hostname }}"
        annotation: "The password for the vyos user is VMware1!"
      when: deploy_router == true

    - name: Reboot VyOS VM
      vmware_guest_powerstate:
        hostname: "{{ physicalESX.host }}"
        username: "{{ physicalESX.user }}"
        password: "{{ physicalESX.password }}"
        validate_certs: no
        name: "{{ vm_prefix }}{{ router_hostname }}"
        state: reboot-guest
      when: deploy_router == true

    - name: Add static route on the Ansible control node to the nested management subnet via the VyOS router public interface
      command: ./ip route add "{{ mgmt_prefix }}".0/24 via "{{ router_public_ip }}"
      args:
        chdir: /bin/
      register: iproute
      ignore_errors: true
      when: deploy_router == true

    - name: Delete the temporary template file for VyOS router
      file: path=/tmp/vyos.conf state=absent
      when: deploy_router == true

    - name: Wait 10 seconds
      pause: seconds=10
      when: deploy_router == true